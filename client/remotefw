#!/bin/sh

if [ -z $1 ]
    # Empty
    then
        echo "[Error] You must tell me what to do!"
        exit 1
fi

#=============== Start of Baked-in Variables ===============
runCommand=$1
runCondition=$2
optCondition=$3
date=$("date")
#=============== End of Baked-in Variables ===============

#=============== Start of Functions ===============
importConfig() {
    if [ -f /etc/remotefw/main.cfg ]
            then
                . /etc/remotefw/main.cfg
                if [ "$runCondition" = "audit" ];
                    then
                        echo "/etc/remotefw/main.cfg was detected!"
                fi
            else
                installDir="/usr/local/sbin"
                remotefwConfigDir="/etc/remotefw"
                if [ "$runCondition" = "audit" ];
                    then
                        echo "[Check] /etc/remotefw/main.cfg was not detected. I suggest you install first."
                        echo "[remotefwConfigDir] $remotefwConfigDir"
                        echo "[installDir] $installDir"
                fi
    fi
}

importSystemInfo() {
    if [ -f /etc/remotefw/system.info ]
            then
                . /etc/remotefw/system.info
                if [ "$runCondition" = "audit" ];
                    then
                        echo "[Check] /etc/remotefw/system.info detected!"
                fi    
            else    
                    echo "[Check] /etc/remotefw/system.info was not detected. Adoption required."
    fi
}

createSystemInfo() {
    if [ -f /etc/remotefw/system.info ]
            then                    
                echo "[FAIL] /etc/remotefw/system.info detected!"
                echo "[FAIL] Process aborted!"
                exit 1
                # . /etc/remotefw/system.info
            else
                if [ "$runCondition" = "audit" ];
                    then
                        echo "[Check] /etc/remotefw/system.info was not detected. Proceeding."
                        exit 0
                fi
    fi
}

statusRptCheck() {
    if [ -z $statusRpt ]
        # Empty
        then
            echo "[Error]   It appears the statusRpt field is empty and the script cannot proceed. Sorry!"
            exit 1
    fi
}

remotefwInstall() {
    echo "[$date] Installation Started."
    # exit 0
    # clear
    mkdir -p $remotefwConfigDir
    cp main.cfg $remotefwConfigDir/main.cfg
    cp remotefw $installDir/remotefw
    chmod +x $installDir/remotefw
    echo "To start the adopt process type:"
    echo "# remotefw adopt"
    echo "See the Help section for more information:"
    echo "# remotefw help"
    echo "[$date] Installation complete."
    if [ "$runCondition" = "audit" ];
        then
            echo "[mkdir] $remotefwConfigDir"
            echo "[Copying File] main.cfg to $remotefwConfigDir/main.cfg"
            echo "[Copying File] remotefw to $installDir"
            echo "[Setting remotefw as executable] $installDir/remotefw"
    fi
    exit 0
}

currentVersion() {
    # Check what the currently installed version of OPNSense is
	opnVer=$("/usr/local/sbin/opnsense-version")
    if [ "$runCondition" = "audit" ];
        then
            echo "opnVer=\"$opnVer\""
        # else
        #     echo "opnVer=\"$opnVer\"" >> $1
    fi
}

osCheck() {
    # opnVer=$("/usr/local/sbin/opnsense-version")
}

wanIpCheck() {
    wanIp=$(curl -s http://whatismyip.akamai.com/)
}

runStatusReport() {
    currentVersion $statusRpt
    echo "Saved to " $statusRpt
    exit 0
}

#=============== End of Functions ===============

#=============== Start of Condition Statements ===============
if [ $runCommand == "install" ]
    then
        importConfig audit
        remotefwInstall
fi

if [ $runCommand == "remove" ]
    then
        importConfig audit
        echo "[$date] Removal Started."
        if [ -f $remotefwConfigDir/main.cfg ]
            then
                rm $remotefwConfigDir/main.cfg
                if [ "$runCondition" = "audit" ];
                    then
                        echo "[Remove] File: $remotefwConfigDir/main.cfg was deleted."
                fi
            else
                if [ "$runCondition" = "audit" ];
                    then
                        echo "[Remove] File: $remotefwConfigDir/main.cfg does not exist or could not be deleted."
                fi
        fi

        if [ -f $remotefwConfigDir/status.rpt ]
            then
                if [ "$runCondition" = "audit" ];
                    then
                        echo "[Remove] File: $remotefwConfigDir/status.rpt was deleted."
                fi
                rm $remotefwConfigDir/status.rpt
            else
                if [ "$runCondition" = "audit" ];
                    then
                        echo "[Remove] File: $remotefwConfigDir/status.rpt does not exist or could not be deleted."
                fi
        fi

        if [ -f $remotefwConfigDir/system.info ]
            then
                rm $remotefwConfigDir/system.info
                if [ "$runCondition" = "audit" ];
                    then
                        echo "[Remove] File: $remotefwConfigDir/system.info was deleted."
                fi
            else
                if [ "$runCondition" = "audit" ];
                    then
                        echo "[Remove] File: $remotefwConfigDir/system.info does not exist or could not be deleted."
                fi
        fi
        
        if [ -d $remotefwConfigDir ]
            then
                rm -rf $remotefwConfigDir
                if [ "$runCondition" = "audit" ];
                    then
                        echo "[Remove] Directory: $remotefwConfigDir was deleted."
                fi
            else
                if [ "$runCondition" = "audit" ];
                    then
                        echo "[Remove] Directory: The main config directory does not exist or could not be deleted."
                fi
        fi
        
        if [ -f $installDir/remotefw ]
            then
                rm $installDir/remotefw
                if [ "$runCondition" = "audit" ];
                    then
                        echo "[Remove] $installDir/remotefw was deleted."
                fi
            else
                if [ "$runCondition" = "audit" ];
                    then
                        echo "[Remove] $installDir/remotefw does not exist or could not be deleted."
                fi
        fi
        echo "[$date] Removal complete."
        echo "===================="
fi

# This switch is used to audit the check data 
if [ $runCommand == "audit" ]
    then
        importConfig
        # echo "[configVer] $configVer"
        # osCheck audit
        # currentVersion audit
        # wanIpCheck && echo "[wanIp] $wanIp"
        # echo "-------------------"
        # importSystemInfo
fi

# This is the switch used to perform the initital adoption process.
if [ $runCommand == "adopt" ]
    then
        importConfig
        # osCheck audit
        createSystemInfo audit
        # currentVersion $systemInfo
        # wanIpCheck && echo "[wanIP] $wanIp"
        # echo "-------------------"
        # importSystemInfo
fi
#=============== Start of Condition Statements ===============